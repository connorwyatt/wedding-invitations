name: Build and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency: ci-${{ github.ref }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: connorwyatt/wedding-invitations

jobs:
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-18.04
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.5.0'
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          useConfigFile: true

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ calculate-version ]
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.SEMVER }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.SEMVER }}
            type=semver,pattern={{major}},value=${{ env.SEMVER }}
            type=sha
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: SEMVER=${{ env.SEMVER }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  tag-version:
    name: Tag Version
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ calculate-version, build ]
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Create GitHub Tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ env.SEMVER }}",
              sha: context.sha
            })
